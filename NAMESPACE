# Generated by roxygen2: do not edit by hand

S3method("$",MatrixLayers)
S3method("$<-",MatrixLayers)
S3method("[",MatrixLayers)
S3method("[[",MatrixLayers)
S3method("defaultLayer<-",MatrixLayers)
S3method("dimnames<-",MatrixLayers)
S3method("names<-",MatrixLayers)
S3method(.DollarNames,MatrixLayers)
S3method(MatrixLayers,default)
S3method(MatrixLayers,list)
S3method(as.list,MatrixLayers)
S3method(concatByCols,CsparseMatrix)
S3method(concatByCols,matrix)
S3method(concatByRows,CsparseMatrix)
S3method(concatByRows,matrix)
S3method(defaultLayer,MatrixLayers)
S3method(dim,MatrixLayers)
S3method(dimnames,MatrixLayers)
S3method(dropEmpty,nsparseMatrix)
S3method(getLayer,MatrixLayers)
S3method(getMappedEntries,nsparseMatrix)
S3method(joinLayers,MatrixLayers)
S3method(length,MatrixLayers)
S3method(names,MatrixLayers)
S3method(setLayer,MatrixLayers)
S3method(setMappedEntries,nsparseMatrix)
S3method(sparseLogMap,character)
S3method(whichIntersect,nsparseMatrix)
export("defaultLayer<-")
export(MatrixLayers)
export(concatByCols)
export(concatByRows)
export(defaultLayer)
export(dropEmpty)
export(getLayer)
export(getLayers)
export(getMappedEntries)
export(joinLayers)
export(setLayer)
export(setLayers)
export(setMappedEntries)
export(sparseLogMap)
export(whichIntersect)
exportClasses(MatrixLayers)
exportMethods("[[<-")
importClassesFrom(Matrix,nsparseMatrix)
importFrom(Matrix,Matrix)
importFrom(Matrix,colSums)
importFrom(Matrix,rowSums)
importFrom(Rcpp,evalCpp)
importFrom(SeuratObject,RowMergeSparseMatrices)
importFrom(easy.utils,verboseMsg)
importFrom(fastmatch,fmatch)
importFrom(magrittr,"%>%")
importFrom(methods,as)
importFrom(methods,callNextMethod)
importFrom(methods,new)
importFrom(methods,setAs)
importFrom(methods,setClass)
importFrom(methods,setMethod)
importFrom(methods,setValidity)
importFrom(methods,validObject)
importFrom(rlang,"%||%")
importFrom(rlang,is_bare_list)
importFrom(rlang,is_empty)
importFrom(rlang,is_false)
importFrom(rlang,is_missing)
importFrom(rlang,is_true)
importFrom(rlang,missing_arg)
importFrom(stats,na.action)
importFrom(stats,na.omit)
importFrom(utils,.DollarNames)
importFrom(utils,head)
importMethodsFrom(Matrix,colSums)
importMethodsFrom(Matrix,rowSums)
importMethodsFrom(Matrix,t)
importMethodsFrom(Matrix,which)
importMethodsFrom(MatrixExtra,"[")
useDynLib(Matrix.Layered)
