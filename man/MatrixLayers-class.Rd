% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MatrixLayers-class.R
\docType{class}
\name{MatrixLayers-class}
\alias{MatrixLayers-class}
\alias{MatrixLayers}
\alias{MatrixLayers.default}
\alias{MatrixLayers.list}
\title{The MatrixLayers class}
\usage{
MatrixLayers(x, ...)

\method{MatrixLayers}{default}(x, ...)

\method{MatrixLayers}{list}(x, rownames = NULL, colnames = NULL, default = NULL, ...)
}
\arguments{
\item{x}{A single matrix-like object or a list of multiple matrix-like
objects.}

\item{...}{Arguments passed to other metheds.}

\item{rownames, colnames}{Known row names or column names. If set to \code{NULL},
will use the union dimension names of input matrices. Otherwise, each matrix
will be subset according to the input \code{rownams} and \code{colnames}.}

\item{default}{Which matrix in the input list should be the default layer.
Default is the first.}
}
\description{
A \code{MatrixLayers} works like a named list containing multiple matrix-like
objects (layers). Each layer must be a two-dimensional object. The potential
common names of rows or columns are mapped to each object using sparse
logical maps (\code{rowMap} and \code{colMap}), so that users can track whether an
entry exists in rows or columns for an object.
}
\section{Slots}{

\describe{
\item{\code{rowMap,colMap}}{An \code{\link[Matrix:nsparseMatrix-class]{nsparseMatrix}} to map row (column)
names for each layer.}

\item{\code{default}}{An integer specifying which layer is the default.}

\item{\code{data}}{A list storing all matrix-like layers. Row names of each layer
must exist in row names of \code{rowMap}, and so do column names for \code{colMap}.}
}}

\examples{
# Create some sparse matrices
mat1 <- Matrix::rsparsematrix(nrow = 20, ncol = 15, density = 0.75)
dimnames(mat1) <- list(sample(LETTERS, 20), sample(letters, 15))

mat2 <- Matrix::rsparsematrix(nrow = 15, ncol = 12, density = 0.75)
dimnames(mat2) <- list(sample(LETTERS, 15), sample(letters, 12))

mat3 <- Matrix::rsparsematrix(nrow = 25, ncol = 10, density = 0.75)
dimnames(mat3) <- list(sample(LETTERS, 25), sample(letters, 10))

# Create a MatrixLayers with only one matrix
mats <- MatrixLayers(mat1)
mats

# Create a MatrixLayers with multiple matrices
mats <- MatrixLayers(list(mat1, mat2, mat3))
mats

mats <- MatrixLayers(list(m1 = mat1, m2 = mat2, m3 = mat3))
mats

}
